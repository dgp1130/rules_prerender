# This workflow will do a clean install of Node dependencies and execute all
# Bazel tests. This implicitly builds all required targets. Any target that is
# not tested but should verify its build should use a build test.
# https://github.com/bazelbuild/bazel-skylib/blob/master/rules/build_test.bzl

name: CI

on:
  push:
    branches:
      # Run CI for direct pushes to `main`. I probably shouldn't do that in
      # general, but for a core team of 1, PRs are a waste of effort.
      - main

      # Run CI for the `ci` branch. This branch isn't special in any way, it
      # just does not enforce linear history, so edits to the CI workflow can be
      # tested there where commits can still be amended before they are
      # immutably pushed to main.
      - ci
  pull_request:
    branches: [ main ]

jobs:
  test:
    # Includes `bazelisk`.
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md#:~:text=Bazel%204.2.1-,Bazelisk,-1.10.1
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gh-actions-cache/bazel/
          node_modules/
        key: bazel

    # Install the package, including Bazel.
    - name: Install
      run: bazel run @nodejs//:npm -- ci

    # Build and test the entire repository.
    - name: Test
      run: bazel test //... --config ci

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bazel.profile.gz
        path: bazel.profile.gz
