# Runs the linter on push to the `main` branch.

name: Lint main

on:
  push:
    branches:
    - main

jobs:
  lint:
    # Includes `bazelisk`.
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md#:~:text=Bazel%204.2.1-,Bazelisk,-1.10.1
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Cache Bazel
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/bazel
        key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
        restore-keys: |
          ${{ runner.os }}-bazel-

    - name: Get pnpm store directory
      id: pnpm-cache-dir
      run: |
        echo "PNPM_STORE_PATH=$(bazel run @pnpm --config ci -- store path --silent)" >> "${GITHUB_OUTPUT}"

    - name: Cache pnpm
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache-dir.outputs.PNPM_STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install
      run: bazel run @pnpm --config ci -- install --dir $PWD --frozen-lockfile

    # Lint the entire repository. This does not take changes into account and
    # will show existing lint failures as well as new ones, but that's ok for a
    # codebase of this size as any such failures should be fixed and/or
    # explicitly ignored.
    - name: Lint
      run: bazel run @pnpm --config ci -- -s --dir $PWD run lint
