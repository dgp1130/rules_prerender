# This workflow will do a clean install of Node dependencies, executes all tests
# and then publishes the package to NPM with the given semver. Should be
# executed manually via the GitHub actions UI.

name: Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: NPM semver to release as.
        required: true
        default: "0.0.0-PLACEHOLDER"
      prerelease:
        description: |
          Whether or not to mark the GitHub release as a prerelease. Possible
          values: "true", "false".
        required: false
        default: "false"

jobs:
  publish:
    # Includes `bazelisk`.
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md#:~:text=Bazel%204.2.1-,Bazelisk,-1.10.1
    runs-on: ubuntu-20.04

    steps:

    # Checkout the repository.
    - uses: actions/checkout@v2

    # Install the package, including Bazel.
    - name: Install
      run: bazel run @nodejs//:npm -- ci

    # Build and test the entire repository.
    - name: Test
      run: bazel --bazelrc .ci.bazelrc test //...

    # Publish the package.
    - name: Publish
      run: bazel --bazelrc .ci.bazelrc run //:pkg.publish --config release
      env:
        BAZEL_RULES_PRERENDER_VERSION: ${{ github.event.inputs.version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

    # Tag the commit and create a release on GitHub.
    - name: Tag and Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: releases/${{ github.event.inputs.version }}
        release_name: ${{ github.event.inputs.version }}
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}
        body: https://www.npmjs.com/package/rules_prerender/v/${{ github.event.inputs.version }}
        draft: true

    # Compress the built NPM package into a `.tar.gz` file.
    - name: Tar Package
      run: tar -czf rules_prerender-${{ github.event.inputs.version }}.tar.gz dist/bin/pkg/

    # Upload the NPM package to the GitHub release.
    - name: Upload Package to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: rules_prerender-${{ github.event.inputs.version }}.tar.gz
        asset_name: rules_prerender-${{ github.event.inputs.version }}.tar.gz
        asset_content_type: application/gzip

    # Notify the user that the release is completed.
    - name: Complete
      run: |
        echo "Draft release created at ${RELEASE_URL}."
        echo "Please update the changelog and publish the release."
      env:
        RELEASE_URL: https://github.com/dgp1130/rules_prerender/releases/tag/releases%2F${{ github.event.inputs.version }}
