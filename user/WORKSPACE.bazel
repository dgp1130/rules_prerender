# Bazel workspace created by @bazel/create 2.3.2

# Declares that this directory is the root of a Bazel workspace.
# See https://docs.bazel.build/versions/master/build-ref.html#workspace
workspace(
    # How this workspace would be referenced with absolute labels from another workspace
    name = "user",
    # Map the @npm bazel workspace to the node_modules directory.
    # This lets Bazel use the same node_modules as other local tooling.
    managed_directories = {"@npm": ["node_modules"]},
)

# Install the nodejs "bootstrap" package
# This provides the basic tools for running and packaging nodejs programs in Bazel
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "2b2004784358655f334925e7eadc7ba80f701144363df949b3293e1ae7a2fb7b",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/5.4.0/rules_nodejs-5.4.0.tar.gz"],
)

# Load `rules_nodejs` dependencies.
load("@build_bazel_rules_nodejs//:repositories.bzl", "build_bazel_rules_nodejs_dependencies")
build_bazel_rules_nodejs_dependencies()

# Install `aspect_rules_js`.
http_archive(
    name = "aspect_rules_js",
    sha256 = "b82da82edf64ba7e07e568193d645fc09b0a4ec92e0d82bd4e53d1a0e28ff681",
    strip_prefix = "rules_js-1.0.0-rc.3",
    url = "https://github.com/aspect-build/rules_js/archive/refs/tags/v1.0.0-rc.3.tar.gz",
)
load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")
rules_js_dependencies()

# Set the NodeJS version.
load("@rules_nodejs//nodejs:repositories.bzl", "nodejs_register_toolchains")
nodejs_register_toolchains(
    name = "nodejs", # Default name used by most tools.
    node_version = "16.10.0",
)

# The npm_install rule runs yarn anytime the package.json or package-lock.json file changes.
# It also extracts any Bazel rules distributed in an npm package.
load("@build_bazel_rules_nodejs//:index.bzl", "npm_install")
npm_install(
    # Name this npm so that Bazel label references look like `@npm//package`.
    name = "npm_user",
    package_json = "//:package.json",
    package_lock_json = "//:package-lock.json",
    # Needed for declarative shadow DOM component.
    exports_directories_only = False,
)

# Load `@aspect_rules_js` version of `@npm`.
# TODO(#48): Rename to `@npm` once migrated off `@build_bazel_rules_nodejs`.
load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock")
npm_translate_lock(
    name = "npm_rules_js_user",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
load("@npm_rules_js_user//:repositories.bzl", "npm_repositories")
npm_repositories()

# Set up `@rules_prerender`.
local_repository(
    name = "rules_prerender",
    path = "../",
)
load("@rules_prerender//:package.bzl", "rules_prerender_dependencies")
rules_prerender_dependencies()
load("@npm_rules_js//:repositories.bzl", "npm_repositories")
npm_repositories()

# Set up `@npm_user//rules_prerender`.
load("@npm_user//rules_prerender:package_nodejs.bzl", "rules_prerender_nodejs_dependencies")
rules_prerender_nodejs_dependencies()
