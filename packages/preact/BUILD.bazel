load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@rules_prerender_npm//:defs.bzl", "npm_link_all_packages")
load("//tools/dependencies:defs.bzl", "prune_dependencies")
load("//tools/jasmine:defs.bzl", "jasmine_node_test")
load("//tools/publish:defs.bzl", "npm_publish")
load("//tools/stamping:defs.bzl", "stamp_package")
load("//tools/typescript:defs.bzl", "ts_project")

npm_link_all_packages(name = "node_modules")

stamp_package(
    name = "package",

    # So internal `ts_project` targets can depend on `type: "module"`.
    visibility = ["//:__subpackages__"],
)

# `rules_prerender` is intended as a "peer dep" in NPM terms, meaning we don't
# want a hard dependency on it because this will build the
# `@rules_prerender//node_modules/rules_prerender` package. We actually want to
# use the version downloaded by the user and available at
# `@user//node_modules/rules_prerender`. Therefore we "prune" (remove) the
# dependency on `rules_prerender` to drop this so the dependency can be provided
# at link time in the user's workspace.
#
# See `//:node_modules/@rules_prerender/preact` deps.
prune_dependencies(
    name = "pkg",
    pkg = ":pkg_internal",
    prune = ["rules_prerender"],
    visibility = ["//visibility:public"],
)

npm_package(
    name = "pkg_internal",
    srcs = [
        "README.md",
        ":package",
        ":preact",
    ],

    # TODO(#59): Remove when upstream is fixed.
    # See: https://github.com/dgp1130/rules_prerender/issues/48#issuecomment-1425257276
    include_external_repositories = ["rules_prerender"],
    package = "@rules_prerender/preact",
)

npm_publish(
    name = "pkg_publish",
    npmrc = "//:.npmrc",
    package = ":pkg",
)

ts_project(
    name = "preact",
    srcs = ["index.mts"],
    deps = [
        ":node_modules/preact-render-to-string",
        "//:node_modules/@types/node",
        "//:node_modules/preact",
        "//:node_modules/rules_prerender",
    ],
)

ts_project(
    name = "preact_test_lib",
    testonly = True,
    srcs = ["index_test.mts"],
    deps = [
        ":node_modules/preact-render-to-string",
        ":preact",
        "//:node_modules/@types/jasmine",
        "//common:file_system_fake",
        "//common/models:prerender_annotation",
    ],
)

jasmine_node_test(
    name = "preact_test",
    deps = [":preact_test_lib"],
)
