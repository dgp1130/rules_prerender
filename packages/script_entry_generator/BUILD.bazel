load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/concatjs:index.bzl", "ts_library")
load("//tools:jasmine.bzl", "jasmine_node_test")

nodejs_binary(
    name = "script_entry_generator",
    entry_point = ":script_entry_generator.ts",
    visibility = ["//tools/internal:__pkg__"],
    templated_args = ["--bazel_patch_module_resolver"],
    data = [
        ":script_entry_generator_lib",
        "@npm//yargs",
    ],
)

ts_library(
    name = "script_entry_generator_lib",
    srcs = ["script_entry_generator.ts"],
    deps = [
        ":generator",
        "//common:binary",
        "//common:formatters",
        "//common/models:prerender_metadata",
        "@npm//@types/node",
        "@npm//@types/yargs",
    ],
)

ts_library(
    name = "script_entry_generator_test_lib",
    srcs = ["script_entry_generator_test.ts"],
    testonly = True,
    deps = [
        "//common/models:prerender_metadata_mock",
        "//common/testing:binary",
        "//common/testing:temp_dir",
        "@npm//@bazel/runfiles",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "script_entry_generator_test",
    data = [":script_entry_generator"],
    deps = [":script_entry_generator_test_lib"],
)

ts_library(
    name = "generator",
    srcs = ["generator.ts"],
    deps = ["//common/models:prerender_metadata"],
)

ts_library(
    name = "generator_test_lib",
    srcs = ["generator_test.ts"],
    testonly = True,
    deps = [
        ":generator",
        "//common/models:prerender_metadata_mock",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "generator_test",
    deps = [":generator_test_lib"],
)
