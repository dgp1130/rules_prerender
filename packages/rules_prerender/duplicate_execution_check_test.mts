import 'jasmine';

import { checkForDuplicateExecution } from './duplicate_execution_check.mjs';

// Ignore errors for the import because the IDE doesn't know this file is
// generated.
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore File copy is generated by Bazel.
import { checkForDuplicateExecution as checkForDuplicateExecutionCopy } from './duplicate_execution_check_copy.mjs';

describe('duplicate_execution_check', () => {
    describe('checkForDuplicateExecution', () => {
        beforeEach(() => {
            delete globalThis.__rulesPrerenderUrl__;
        });

        it('no-ops on the first execution', () => {
            expect(() => { checkForDuplicateExecution(); }).not.toThrow();
        });

        it('throws on the second execution', () => {
            checkForDuplicateExecution();

            expect(() => { checkForDuplicateExecution(); })
                .toThrowError(/`rules_prerender` was loaded twice/);
        });

        // The point of this script is to check for `rules_prerender` being
        // duplicated. Therefore the function will actually be defined twice,
        // with each version only executed once. We can emulate this by
        // importing a copied version of the script and verifying that calling
        // each one once still throws the expected error.
        it('throws on second execution from a copied script', () => {
            checkForDuplicateExecution();

            expect(() => { checkForDuplicateExecutionCopy(); })
                .toThrowError(/`rules_prerender` was loaded twice/);
        });
    });
});
