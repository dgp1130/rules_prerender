load("@rules_prerender_npm//:live-server/package_json.bzl", live_server_bin = "bin")
load("@rules_prerender_npm//:rollup/package_json.bzl", rollup_bin = "bin")
load("@aspect_bazel_lib//lib:copy_to_bin.bzl", "copy_to_bin")
load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//:index.bzl", "prerender_component")
load("//tools/jasmine:defs.bzl", "jasmine_node_test")
load("//tools/typescript:defs.bzl", "ts_project")

# Unused `package.json` file exists for IDE intellisense of imports in
# `//examples/external/...`. This is necessary to have a `main` field which
# points at `index.mts.`
exports_files(["package.json"], visibility = ["//visibility:private"])

rollup_bin.rollup_binary(
    name = "rollup",
    visibility = ["//visibility:public"],
)

live_server_bin.live_server_binary(
    name = "devserver",
    visibility = ["//visibility:public"],
)

ts_project(
    name = "rollup_config",
    srcs = ["rollup.config.mts"],
    visibility = ["//visibility:public"],
    deps = [
        "//:node_modules/@rollup/plugin-node-resolve",
        "//:node_modules/rollup",
    ],
)

ts_project(
    name = "rules_prerender_lib",
    srcs = ["index.mts"],
    visibility = ["//:__pkg__"],
    deps = [
        ":scripts",
        ":styles",
        "//common/models:prerender_resource",
        "//common/safe_html",
        "//common/safe_html:unsafe_html",
    ],
)

bzl_library(
    name = "script_entry_points",
    srcs = ["script_entry_points.bzl"],
)

bzl_library(
    name = "extract_single_resource",
    srcs = ["extract_single_resource.bzl"],
    visibility = ["//:__pkg__"],
)

bzl_library(
    name = "inject_resources",
    srcs = ["inject_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":extract_single_resource",
        ":multi_inject_resources",
        ":web_resources",
    ],
)

bzl_library(
    name = "multi_inject_resources",
    srcs = ["multi_inject_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = [":web_resources"],
)

bzl_library(
    name = "prerender_component",
    srcs = ["prerender_component.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":prerender_metadata",
        ":visibility_aspect",
        ":web_resources",
        "//common:label",
        "//common:paths",
        "//packages/rules_prerender/css:css_binaries",
        "//packages/rules_prerender/css:css_group",
        "//packages/rules_prerender/css:css_library",
    ],
)

bzl_library(
    name = "prerender_component_publish_files",
    srcs = ["prerender_component_publish_files.bzl"],
    visibility = ["//:__pkg__"],
    deps = ["//common:label"],
)

ts_project(
    name = "prerender_component_publish_files_test_lib",
    srcs = ["prerender_component_publish_files_test.mts"],
    data = ["//packages/rules_prerender/prerender_component_publish_files_testdata:component_publish_files"],
    deps = [
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
    ],
)

jasmine_node_test(
    name = "prerender_component_publish_files_test",
    deps = [":prerender_component_publish_files_test_lib"],
)

bzl_library(
    name = "prerender_metadata",
    srcs = ["prerender_metadata.bzl"],
    deps = [
        ":web_resources",
        "//packages/rules_prerender/css:css_providers",
    ],
)

bzl_library(
    name = "prerender_pages_unbundled",
    srcs = ["prerender_pages_unbundled.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":prerender_component",
        ":prerender_metadata",
        ":prerender_resources",
        ":script_entry_points",
        ":web_resources",
        "//common:paths",
        "//packages/rules_prerender/css:css_group",
        "//packages/rules_prerender/css:css_providers",
    ],
)

bzl_library(
    name = "prerender_pages",
    srcs = ["prerender_pages.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":multi_inject_resources",
        ":prerender_pages_unbundled",
        ":web_resources",
        "//tools/binaries/js_bundler:js_bundle",
    ],
)

bzl_library(
    name = "prerender_resources",
    srcs = ["prerender_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":web_resources",
        "//common:paths",
        "//packages/rules_prerender/css:css_providers",
        "//tools/binaries/renderer:build_vars",
    ],
)

bzl_library(
    name = "visibility_aspect",
    srcs = ["visibility_aspect.bzl"],
)

bzl_library(
    name = "web_resources",
    srcs = ["web_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = ["//common:label"],
)

bzl_library(
    name = "web_resources_devserver",
    srcs = ["web_resources_devserver.bzl"],
    visibility = ["//:__pkg__"],
    deps = ["//common:label"],
)

ts_project(
    name = "paths",
    srcs = ["paths.mts"],
    deps = ["//:node_modules/@types/node"],
)

ts_project(
    name = "paths_test_lib",
    srcs = ["paths_test.mts"],
    testonly = True,
    deps = [
        ":paths",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "paths_test",
    deps = [":paths_test_lib"],
)

ts_project(
    name = "scripts",
    srcs = ["scripts.mts"],
    deps = [
        ":paths",
        "//common/models:prerender_annotation",
        "//:node_modules/@types/node",
    ],
)

ts_project(
    name = "scripts_test_lib",
    srcs = ["scripts_test.mts"],
    testonly = True,
    deps = [
        ":scripts",
        "//common/models:prerender_annotation",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "scripts_test",
    deps = [":scripts_test_lib"],
)

ts_project(
    name = "styles",
    srcs = ["styles.mts"],
    visibility = ["//packages/renderer:__subpackages__"],
    deps = [
        ":inline_style_map",
        ":paths",
        "//common/models:prerender_annotation",
        "//:node_modules/@types/node",
    ],
)

ts_project(
    name = "styles_test_lib",
    srcs = ["styles_test.mts"],
    testonly = True,
    deps = [
        ":inline_style_map",
        ":styles",
        "//common/models:prerender_annotation",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "styles_test",
    deps = [":styles_test_lib"],
)

ts_project(
    name = "inline_style_map",
    srcs = ["inline_style_map.mts"],
    visibility = ["//packages/renderer:__subpackages__"],
)
