load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("//:index.bzl", "prerender_component")
load("//tools:jasmine.bzl", "jasmine_node_test")
load("//tools:publish.bzl", "publish_files")

exports_files(
    ["rollup-default.config.js"],
    visibility = ["//visibility:public"],
)

ts_library(
    name = "rules_prerender",
    srcs = ["index.ts"],
    module_name = "rules_prerender",
    visibility = ["//visibility:public"],
    deps = [
        ":scripts",
        ":styles",
        "//common/models:prerender_resource",
    ],
)

publish_files(
    name = "publish_files",
    files = glob(["**/*.bzl"]) + [
        "rollup-default.config.js",
        "//packages/rules_prerender/declarative_shadow_dom:publish_files",
    ],
    visibility = ["//:__pkg__"],
)

bzl_library(
    name = "entry_points",
    srcs = ["entry_points.bzl"],
)

bzl_library(
    name = "extract_single_resource",
    srcs = ["extract_single_resource.bzl"],
    visibility = ["//:__pkg__"],
)

bzl_library(
    name = "inject_resources",
    srcs = ["inject_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":extract_single_resource",
        ":multi_inject_resources",
        ":web_resources",
    ],
)

bzl_library(
    name = "multi_inject_resources",
    srcs = ["multi_inject_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = [":web_resources"],
)

bzl_library(
    name = "prerender_component",
    srcs = ["prerender_component.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":web_resources",
        "//common:label",
        "//common:paths",
    ],
)

bzl_library(
    name = "prerender_component_publish_files",
    srcs = ["prerender_component_publish_files.bzl"],
    visibility = ["//:__pkg__"],
    deps = ["//common:label"],
)

ts_library(
    name = "prerender_component_publish_files_test_lib",
    srcs = ["prerender_component_publish_files_test.ts"],
    data = ["//packages/rules_prerender/prerender_component_publish_files_testdata:component_publish_files"],
    deps = [
        "@npm//@bazel/runfiles",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "prerender_component_publish_files_test",
    deps = [":prerender_component_publish_files_test_lib"],
)

bzl_library(
    name = "prerender_pages_unbundled",
    srcs = ["prerender_pages_unbundled.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":entry_points",
        ":prerender_component",
        ":web_resources",
    ],
)

bzl_library(
    name = "prerender_pages",
    srcs = ["prerender_pages.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":multi_inject_resources",
        ":prerender_pages_unbundled",
        ":postcss_import_plugin_bzl",
        ":web_resources",
    ],
)

bzl_library(
    name = "prerender_resources",
    srcs = ["prerender_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = [
        ":web_resources",
        "//common:paths",
        "//packages/renderer:build_vars",
    ],
)

bzl_library(
    name = "postcss_import_plugin_bzl",
    srcs = ["postcss_import_plugin.bzl"],
)

bzl_library(
    name = "web_resources",
    srcs = ["web_resources.bzl"],
    visibility = ["//:__pkg__"],
    deps = ["//common:label"],
)

bzl_library(
    name = "web_resources_devserver",
    srcs = ["web_resources_devserver.bzl"],
    visibility = ["//:__pkg__"],
    deps = ["//common:label"],
)

ts_library(
    name = "scripts",
    srcs = ["scripts.ts"],
    visibility = ["//packages/rules_prerender/declarative_shadow_dom:__pkg__"],
    deps = ["//common/models:prerender_annotation"],
)

ts_library(
    name = "scripts_test_lib",
    srcs = ["scripts_test.ts"],
    testonly = True,
    deps = [
        ":scripts",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "scripts_test",
    deps = [":scripts_test_lib"],
)

ts_library(
    name = "styles",
    srcs = ["styles.ts"],
    deps = [
        "//common:fs",
        "//common/models:prerender_annotation",
        "@npm//@bazel/runfiles",
    ],
)

ts_library(
    name = "styles_test_lib",
    srcs = ["styles_test.ts"],
    testonly = True,
    data = ["//packages/rules_prerender/testdata:styles.css"],
    deps = [
        ":styles",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "styles_test",
    deps = [":styles_test_lib"],
)
