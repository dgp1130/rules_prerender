workspace(name = "rules_prerender")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Load `@bazel_skylib`.
http_archive(
    name = "bazel_skylib",
    sha256 = "b8a1527901774180afc798aeb28c4634bdccf19c4d98e7bdd1ce79d1fe9aaad7",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz",
    ],
)
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

# Load `@aspect_bazel_lib`.
http_archive(
    name = "aspect_bazel_lib",
    sha256 = "d0529773764ac61184eb3ad3c687fb835df5bee01afedf07f0cf1a45515c96bc",
    strip_prefix = "bazel-lib-1.42.3",
    url = "https://github.com/aspect-build/bazel-lib/releases/download/v1.42.3/bazel-lib-v1.42.3.tar.gz",
)
load(
    "@aspect_bazel_lib//lib:repositories.bzl",
    "aspect_bazel_lib_dependencies",
    "register_jq_toolchains",
)
aspect_bazel_lib_dependencies()
register_jq_toolchains()

# Load `@rules_prerender` dependencies the same way users will.
load("//:dependencies.bzl", "rules_prerender_dependencies")
rules_prerender_dependencies()
load("//:repositories.bzl", "rules_prerender_repositories")
rules_prerender_repositories()
load("//:npm_repositories.bzl", "npm_repositories")
npm_repositories()

# Set the NodeJS version.
load("@rules_nodejs//nodejs:repositories.bzl", "nodejs_register_toolchains")
nodejs_register_toolchains(
    name = "nodejs", # Default name used by most tools.
    use_nvmrc = "//:.nvmrc",
)

# Load web testing rules.
http_archive(
    name = "io_bazel_rules_webtesting",
    sha256 = "e9abb7658b6a129740c0b3ef6f5a2370864e102a5ba5ffca2cea565829ed825a",
    urls = ["https://github.com/bazelbuild/rules_webtesting/releases/download/0.3.5/rules_webtesting.tar.gz"],
)
load(
    "@io_bazel_rules_webtesting//web:repositories.bzl",
    "web_test_repositories",
)
web_test_repositories()

# Load browser binaries.
load("//tools/browsers:browser_repositories.bzl", "browser_repositories")
browser_repositories()
