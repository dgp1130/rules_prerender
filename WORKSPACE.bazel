# Bazel workspace created by @bazel/create 2.3.1

# Declares that this directory is the root of a Bazel workspace.
# See https://docs.bazel.build/versions/master/build-ref.html#workspace
workspace(
    # How this workspace would be referenced with absolute labels from another workspace
    name = "rules_prerender",
    # Map the @npm bazel workspace to the node_modules directory.
    # This lets Bazel use the same node_modules as other local tooling.
    managed_directories = {"@npm": ["node_modules"]},
)

# Install the nodejs "bootstrap" package
# This provides the basic tools for running and packaging nodejs programs in Bazel
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "2b2004784358655f334925e7eadc7ba80f701144363df949b3293e1ae7a2fb7b",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/5.4.0/rules_nodejs-5.4.0.tar.gz"],
)
load("@build_bazel_rules_nodejs//:repositories.bzl", "build_bazel_rules_nodejs_dependencies")
build_bazel_rules_nodejs_dependencies()

# Load `@aspect_rules_js`.
http_archive(
    name = "aspect_rules_js",
    sha256 = "80e168f9cd62f3640de429b70b34ff817d0d94ada2abaf2cffeef46e35434e1d",
    strip_prefix = "rules_js-1.0.0-rc.1",
    url = "https://github.com/aspect-build/rules_js/archive/refs/tags/v1.0.0-rc.1.tar.gz",
)

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")
rules_js_dependencies()

# Set the NodeJS version.
load("@rules_nodejs//nodejs:repositories.bzl", "nodejs_register_toolchains")
nodejs_register_toolchains(
    name = "nodejs", # Default name used by most tools.
    node_version = "16.10.0",
)

# The npm_install rule runs yarn anytime the package.json or package-lock.json file changes.
# It also extracts any Bazel rules distributed in an npm package.
load("@build_bazel_rules_nodejs//:index.bzl", "npm_install")
npm_install(
    # Name this npm so that Bazel label references look like `@npm//package`.
    name = "npm",
    package_json = "//:package.json",
    package_lock_json = "//:package-lock.json",
    # Needed for `rules_postcss` to be able to resolve its NPM dependencies.
    strict_visibility = False,
    # Needed for `rules_postcss`.
    exports_directories_only = False,
)

# Load the `@aspect_rules_js` version of the `@npm` workspace. Named `@npm_rules_js` to avoid
# conflicting with the existing workspace from `@build_bazel_rules_nodejs`.
# TODO(#48): Rename to `@npm` once migrated off `@build_bazel_rules_nodejs`.
load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock")
npm_translate_lock(
    name = "npm_rules_js",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)

load("@npm_rules_js//:repositories.bzl", "npm_repositories")
npm_repositories()

# Load bazel_skylib.
http_archive(
    name = "bazel_skylib",
    urls = [
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.0.3/bazel-skylib-1.0.3.tar.gz",
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.0.3/bazel-skylib-1.0.3.tar.gz",
    ],
    sha256 = "1c531376ac7e5a180e0237938a2536de0c54d93f5c278634818e0efc952dd56c",
)
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

# Aspect Bazel library.
http_archive(
    name = "aspect_bazel_lib",
    sha256 = "58fab45b4419a5eaa340489d567a013e80334c8e4bd998288149cd7e39437586",
    strip_prefix = "bazel-lib-1.7.0",
    url = "https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.7.0.tar.gz",
)
load("@aspect_bazel_lib//lib:repositories.bzl", "aspect_bazel_lib_dependencies")
aspect_bazel_lib_dependencies()

# Install `@aspect_rules_ts`.
http_archive(
    name = "aspect_rules_ts",
    sha256 = "57aa473c5b4d300adea8eda9c8306519344c4acfcc86a42530cdf23e35cb63d7",
    strip_prefix = "rules_ts-0.10.0",
    url = "https://github.com/aspect-build/rules_ts/archive/refs/tags/v0.10.0.tar.gz",
)
load("@aspect_rules_ts//ts:repositories.bzl", "rules_ts_dependencies")
rules_ts_dependencies(ts_version = "4.6.3")

# Install `@rules_rollup`.
http_archive(
    name = "aspect_rules_rollup",
    sha256 = "4f581917b91893e01037daebd8d060744c149601153be356bf7b38e5b8c2b79c",
    strip_prefix = "rules_rollup-0.8.0",
    url = "https://github.com/aspect-build/rules_rollup/archive/refs/tags/v0.8.0.tar.gz",
)

load("@aspect_rules_rollup//rollup:dependencies.bzl", "rules_rollup_dependencies")
rules_rollup_dependencies()
load("@aspect_rules_rollup//rollup:repositories.bzl", LATEST_ROLLUP_VERSION = "LATEST_VERSION", "rollup_register_toolchains")
rollup_register_toolchains(
    name = "rollup",
    rollup_version = LATEST_ROLLUP_VERSION,
)

# Install `@aspect_rules_jest`.
http_archive(
    name = "aspect_rules_jest",
    sha256 = "ed2d57f76127d47c3831f4ff6afd790aab149a2d542e978b41e0f6d277457407",
    strip_prefix = "rules_jest-0.7.0",
    url = "https://github.com/aspect-build/rules_jest/archive/refs/tags/v0.7.0.tar.gz",
)
load("@aspect_rules_jest//jest:dependencies.bzl", "rules_jest_dependencies")
rules_jest_dependencies()
load("@aspect_rules_jest//jest:repositories.bzl", "LATEST_VERSION", "jest_repositories")
jest_repositories(
    name = "jest",
    jest_version = LATEST_VERSION,
)

# Load web testing rules.
http_archive(
    name = "io_bazel_rules_webtesting",
    sha256 = "e9abb7658b6a129740c0b3ef6f5a2370864e102a5ba5ffca2cea565829ed825a",
    urls = ["https://github.com/bazelbuild/rules_webtesting/releases/download/0.3.5/rules_webtesting.tar.gz"],
)
load(
    "@io_bazel_rules_webtesting//web:repositories.bzl",
    "web_test_repositories",
)
web_test_repositories()

# Load web testing browsers and drivers (ie. Chrome and Chromedriver).
load(
    "@io_bazel_rules_webtesting//web/versioned:browsers-0.3.3.bzl",
    "browser_repositories",
)
browser_repositories(chromium = True)

# Install transitive Bazel dependencies.
load("//:package.bzl", "rules_prerender_dependencies")
rules_prerender_dependencies()
