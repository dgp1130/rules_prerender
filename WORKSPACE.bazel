# Bazel workspace created by @bazel/create 2.3.1

# Declares that this directory is the root of a Bazel workspace.
# See https://docs.bazel.build/versions/master/build-ref.html#workspace
workspace(
    # How this workspace would be referenced with absolute labels from another workspace
    name = "rules_prerender",
    # Map the @npm bazel workspace to the node_modules directory.
    # This lets Bazel use the same node_modules as other local tooling.
    managed_directories = {"@npm": ["node_modules"]},
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "aspect_bazel_lib",
    sha256 = "79623d656aa23ad3fd4692ab99786c613cd36e49f5566469ed97bc9b4c655f03",
    strip_prefix = "bazel-lib-1.23.3",
    url = "https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.23.3.tar.gz",
)

load("@aspect_bazel_lib//lib:repositories.bzl", "aspect_bazel_lib_dependencies")
aspect_bazel_lib_dependencies()

# Install the nodejs "bootstrap" package
# This provides the basic tools for running and packaging nodejs programs in Bazel
http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "dcc55f810142b6cf46a44d0180a5a7fb923c04a5061e2e8d8eb05ccccc60864b",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.0/rules_nodejs-5.8.0.tar.gz"],
)
load("@build_bazel_rules_nodejs//:repositories.bzl", "build_bazel_rules_nodejs_dependencies")
build_bazel_rules_nodejs_dependencies()

# Load `@aspect_rules_js`.
http_archive(
    name = "aspect_rules_js",
    sha256 = "3ad6684d744ebbc6592d404cc3aa81d0da634eccb3499f6fd198ae122fa28489",
    strip_prefix = "rules_js-1.19.0",
    url = "https://github.com/aspect-build/rules_js/releases/download/v1.19.0/rules_js-v1.19.0.tar.gz",
)

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")
rules_js_dependencies()

# Set the NodeJS version.
load("@rules_nodejs//nodejs:repositories.bzl", "nodejs_register_toolchains")
nodejs_register_toolchains(
    name = "nodejs", # Default name used by most tools.
    node_version = "16.10.0",
)

# The npm_install rule runs yarn anytime the package.json or package-lock.json file changes.
# It also extracts any Bazel rules distributed in an npm package.
load("@build_bazel_rules_nodejs//:index.bzl", "npm_install")
npm_install(
    # Name this npm so that Bazel label references look like `@npm//package`.
    name = "npm",
    package_json = "//:package.json",
    package_lock_json = "//:package-lock.json",
    # Needed for `rules_postcss` to be able to resolve its NPM dependencies.
    strict_visibility = False,
    # Needed for `rules_postcss`.
    exports_directories_only = False,
)

# Load the `@aspect_rules_js` version of the `@npm` workspace. Named `@npm_rules_js` to avoid
# conflicting with the existing workspace from `@build_bazel_rules_nodejs`.
# TODO(#48): Rename to `@npm` once migrated off `@build_bazel_rules_nodejs`.
load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock")
npm_translate_lock(
    name = "npm_rules_js",
    pnpm_lock = "//:pnpm-lock.yaml",
    npmrc = "//:.npmrc",
    verify_node_modules_ignored = "//:.bazelignore",
)

load("@npm_rules_js//:repositories.bzl", "npm_repositories")
npm_repositories()

http_archive(
    name = "aspect_rules_ts",
    sha256 = "acb20a4e41295d07441fa940c8da9fd02f8637391fd74a14300586a3ee244d59",
    strip_prefix = "rules_ts-1.2.0",
    url = "https://github.com/aspect-build/rules_ts/archive/refs/tags/v1.2.0.tar.gz",
    # TODO(#48): Remove when fix is released by `@aspect_rules_ts`.
    # See: https://github.com/aspect-build/rules_ts/pull/310
    patches = ["//:aspect_rules_ts_issue_284.patch"],
)

load("@aspect_rules_ts//ts:repositories.bzl", "rules_ts_dependencies")
rules_ts_dependencies(
    # This keeps the TypeScript version in-sync with the editor, which is typically best.
    ts_version_from = "//:package.json",
)

http_archive(
    name = "aspect_rules_jasmine",
    sha256 = "089250b6afda54099d7a3bc4e0f0765451356f329d105a32d1a78703edf70320",
    strip_prefix = "rules_jasmine-0.3.0",
    url = "https://github.com/aspect-build/rules_jasmine/archive/refs/tags/v0.3.0.tar.gz",
)

load("@aspect_rules_jasmine//jasmine:dependencies.bzl", "rules_jasmine_dependencies")
rules_jasmine_dependencies()

load("@aspect_rules_jasmine//jasmine:repositories.bzl", "jasmine_repositories")
jasmine_repositories(name = "jasmine")

load("@jasmine//:npm_repositories.bzl", jasmine_npm_repositories = "npm_repositories")
jasmine_npm_repositories()

# Install `@aspect_rules_rollup`.
http_archive(
    name = "aspect_rules_rollup",
    sha256 = "2a0c863fa4ca35cc2d49b63637792d38262f71fc0590c76b7946838614c94fda",
    strip_prefix = "rules_rollup-0.13.0",
    url = "https://github.com/aspect-build/rules_rollup/archive/refs/tags/v0.13.0.tar.gz",
)
load("@aspect_rules_rollup//rollup:dependencies.bzl", "rules_rollup_dependencies")
rules_rollup_dependencies()
load("@aspect_rules_rollup//rollup:repositories.bzl", "rollup_repositories")
rollup_repositories(name = "rollup")
load("@rollup//:npm_repositories.bzl", rollup_npm_repositories = "npm_repositories")
rollup_npm_repositories()

# Load bazel_skylib.
http_archive(
    name = "bazel_skylib",
    urls = [
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.0.3/bazel-skylib-1.0.3.tar.gz",
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.0.3/bazel-skylib-1.0.3.tar.gz",
    ],
    sha256 = "1c531376ac7e5a180e0237938a2536de0c54d93f5c278634818e0efc952dd56c",
)
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

# Load web testing rules.
http_archive(
    name = "io_bazel_rules_webtesting",
    sha256 = "e9abb7658b6a129740c0b3ef6f5a2370864e102a5ba5ffca2cea565829ed825a",
    urls = ["https://github.com/bazelbuild/rules_webtesting/releases/download/0.3.5/rules_webtesting.tar.gz"],
)
load(
    "@io_bazel_rules_webtesting//web:repositories.bzl",
    "web_test_repositories",
)
web_test_repositories()

# Load web testing browsers and drivers (ie. Chrome and Chromedriver).
load(
    "@io_bazel_rules_webtesting//web/versioned:browsers-0.3.3.bzl",
    "browser_repositories",
)
browser_repositories(chromium = True)

load("@npm//@bazel/postcss:package.bzl", "rules_postcss_dependencies")
rules_postcss_dependencies()
