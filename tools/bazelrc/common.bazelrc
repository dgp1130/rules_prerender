# Common `.bazelrc` configuration for all workspaces in the repository.

# Seems to break the workspace name and is not supported right now anyways.
common --noenable_bzlmod

# Allow the Bazel server to check directory sources for changes. Ensures that the Bazel server
# notices when a directory changes, if you have a directory listed in the srcs of some target.
# Recommended when using
# [copy_directory](https://github.com/aspect-build/bazel-lib/blob/main/docs/copy_directory.md) and
# [rules_js](https://github.com/aspect-build/rules_js) since npm package are source directories
# inputs to copy_directory actions.
# Docs: https://bazel.build/reference/command-line-reference#flag--host_jvm_args
startup --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1

# Cache action outputs on disk so they persist across output_base and bazel
# shutdown (eg. changing branches)
common --disk_cache=~/.cache/bazel-disk-cache

# Bazel will create symlinks from the workspace directory to output artifacts.
# Build results will be placed in a directory called "dist/bin"
# Other directories will be created like "dist/testlogs"
# Be aware that this will still create a bazel-out symlink in
# your project directory, which you must exclude from version control and your
# editor's search path.
common --symlink_prefix=dist/
# To disable the symlinks altogether (including bazel-out) you can use
# common --symlink_prefix=/
# however this makes it harder to find outputs.

# Specifies desired output mode for running tests.
test --test_output=errors

# Turn off legacy external runfiles
# This prevents accidentally depending on this feature, which Bazel will remove.
common --nolegacy_external_runfiles

# Enable `_validation` actions to confirm targets build correctly even when
# certain data is not used by the build.
common --experimental_run_validations

# When running `bazel coverage` --instrument_test_targets needs to be set in
# order to collect coverage information from test targets
coverage --instrument_test_targets

# Use the value of `skipLibCheck` from `tsconfig.json` for all `ts_project`
# targets.
common --@aspect_rules_ts//ts:skipLibCheck=honor_tsconfig

# `@rules_prerender` specific options.
build --flag_alias=debug_prerender=@rules_prerender//tools/flags:debug_prerender
