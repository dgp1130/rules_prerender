load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("//tools/jasmine:defs.bzl", "jasmine_node_test")
load("//tools/typescript:defs.bzl", "ts_project")

js_binary(
    name = "resource_injector",
    entry_point = "resource_injector.mjs",
    visibility = ["//visibility:public"],
    data = [":resource_injector_lib"],
)

ts_project(
    name = "resource_injector_lib",
    srcs = ["resource_injector.mts"],
    data = ["//:node_modules/yargs"],
    deps = [
        ":config",
        ":injector",
        "//common:binary",
        "//common:formatters",
        "//:node_modules/@types/node",
        "//:node_modules/@types/yargs",
    ],
)

ts_project(
    name = "resource_injector_test_lib",
    srcs = ["resource_injector_test.mts"],
    testonly = True,
    deps = [
        ":config",
        "//common/testing:binary",
        "//common/testing:temp_dir",
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
    ],
)

jasmine_node_test(
    name = "resource_injector_test",
    data = [":resource_injector"],
    deps = [":resource_injector_test_lib"],
)

ts_project(
    name = "config",
    srcs = ["config.mts"],
)

ts_project(
    name = "injector",
    srcs = ["injector.mts"],
    data = ["//:node_modules/node-html-parser"],
    deps = [
        ":config",
        "//common:file_system",
        "//common:prerender_annotation_walker",
    ],
)

ts_project(
    name = "injector_test_lib",
    srcs = ["injector_test.mts"],
    testonly = True,
    deps = [
        ":config",
        ":injector",
        "//common:file_system_fake",
        "//common/models:prerender_annotation",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "injector_test",
    deps = [":injector_test_lib"],
)
