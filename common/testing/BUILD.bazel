load("@npm//@bazel/typescript:index.bzl", "ts_devserver", "ts_library")
load("//tools:jasmine.bzl", "jasmine_node_test")

ts_library(
    name = "binary",
    srcs = ["binary.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = ["@npm//@types/node"],
)

ts_library(
    name = "binary_test_lib",
    srcs = ["binary_test.ts"],
    testonly = True,
    deps = [
        ":binary",
        ":temp_dir",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "binary_test",
    deps = [":binary_test_lib"],
)

ts_library(
    name = "devserver",
    srcs = ["devserver.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = [
        ":effects",
        "//common:http",
        "@npm//@types/jasmine",
        "@npm//@types/node",
        "@npm//http-status-codes",
        "@npm//tree-kill",
    ],
)

ts_library(
    name = "devserver_test_lib",
    srcs = ["devserver_test.ts"],
    testonly = True,
    deps = [
        ":devserver",
        ":effect_tester",
        "//common:http",
        "//common:runfiles",
        "@npm//@types/jasmine",
        "@npm//@types/node",
        "@npm//http-status-codes",
    ],
)

ts_devserver(
    name = "devserver_test_server",
    testonly = True,
    static_files = ["devserver_test_page.html"],
    additional_root_paths = ["rules_prerender/common/testing"],
)

jasmine_node_test(
    name = "devserver_test",
    data = [":devserver_test_server"],
    deps = [":devserver_test_lib"],
)

ts_library(
    name = "effects",
    srcs = ["effects.ts"],
    testonly = True,
    deps = [
        "@npm//@types/jasmine",
    ],
)

ts_library(
    name = "effects_test_lib",
    srcs = ["effects_test.ts"],
    testonly = True,
    deps = [
        ":effects",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "effects_test",
    deps = [":effects_test_lib"],
)

ts_library(
    name = "effect_fake",
    srcs = ["effect_fake.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = [":effects"],
)

ts_library(
    name = "effect_fake_test_lib",
    srcs = ["effect_fake_test.ts"],
    testonly = True,
    deps = [
        ":effects",
        ":effect_fake",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "effect_fake_test",
    deps = [":effect_fake_test_lib"],
)

ts_library(
    name = "effect_tester",
    srcs = ["effect_tester.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = [
        ":effects",
        "@npm//@types/jasmine",
    ],
)

ts_library(
    name = "effect_tester_test_lib",
    srcs = ["effect_tester_test.ts"],
    testonly = True,
    deps = [
        ":effects",
        ":effect_fake",
        ":effect_tester",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "effect_tester_test",
    deps = [":effect_tester_test_lib"],
)

ts_library(
    name = "mocks",
    srcs = ["mocks.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = ["@npm//@types/jasmine"],
)

ts_library(
    name = "mocks_test_lib",
    srcs = ["mocks_test.ts"],
    testonly = True,
    deps = [
        ":mocks",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "mocks_test",
    deps = [":mocks_test_lib"],
)

ts_library(
    name = "puppeteer",
    srcs = ["puppeteer.ts"],
    visibility = ["//visibility:public"],
    testonly = True,
    deps = [
        ":effects",
        "@npm//@types/node",
        "@npm//@types/puppeteer",
    ],
)

ts_library(
    name = "puppeteer_test_lib",
    srcs = ["puppeteer_test.ts"],
    testonly = True,
    deps = [
        ":effect_fake",
        ":effect_tester",
        ":puppeteer",
        "@npm//@types/jasmine",
        "@npm//@types/node",
        "@npm//@types/puppeteer",
    ],
)

jasmine_node_test(
    name = "puppeteer_test",
    data = ["@npm//puppeteer"],
    deps = [":puppeteer_test_lib"],
)

ts_library(
    name = "temp_dir",
    srcs = ["temp_dir.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = [
        ":effects",
        "@npm//@types/node",
    ],
)

ts_library(
    name = "temp_dir_test_lib",
    srcs = ["temp_dir_test.ts"],
    testonly = True,
    deps = [
        ":temp_dir",
        ":effect_tester",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "temp_dir_test",
    deps = [":temp_dir_test_lib"],
)
