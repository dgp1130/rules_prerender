load("//:index.bzl", "web_resources", "web_resources_devserver")
load("//tools:jasmine.bzl", "jasmine_node_test", "jasmine_web_test_suite")
load("//tools:typescript.bzl", "ts_project")

ts_project(
    name = "binary",
    srcs = ["binary.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = ["//:node_modules/@types/node"],
)

ts_project(
    name = "binary_test_lib",
    srcs = ["binary_test.ts"],
    testonly = True,
    deps = [
        ":binary",
        ":temp_dir",
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
    ],
)

jasmine_node_test(
    name = "binary_test",
    deps = [":binary_test_lib"],
)

ts_project(
    name = "devserver",
    srcs = ["devserver.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    data = [
        "//:node_modules/http-status-codes",
        "//:node_modules/tree-kill",
    ],
    deps = [
        ":effects",
        ":test_server",
        "//common:http",
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
        "//:node_modules/http-status-codes",
        "//:node_modules/tree-kill",
    ],
)

ts_project(
    name = "devserver_test_lib",
    srcs = ["devserver_test.ts"],
    testonly = True,
    data = ["//:node_modules/http-status-codes"],
    deps = [
        ":devserver",
        ":effect_tester",
        "//common:http",
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
        "//:node_modules/http-status-codes",
    ],
)

web_resources(
    name = "devserver_test_resources",
    entries = {
        "/devserver_test_page.html": "devserver_test_page.html",
    },
    testonly = True,
)

web_resources_devserver(
    name = "devserver_test_server",
    resources = ":devserver_test_resources",
    testonly = True,
)

jasmine_node_test(
    name = "devserver_test",
    data = [":devserver_test_server"],
    deps = [":devserver_test_lib"],
)

ts_project(
    name = "effects",
    srcs = ["effects.ts"],
    testonly = True,
    deps = [
        "//:node_modules/@types/jasmine",
    ],
)

ts_project(
    name = "effects_test_lib",
    srcs = ["effects_test.ts"],
    testonly = True,
    deps = [
        ":effects",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "effects_test",
    deps = [":effects_test_lib"],
)

ts_project(
    name = "effect_fake",
    srcs = ["effect_fake.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = [":effects"],
)

ts_project(
    name = "effect_fake_test_lib",
    srcs = ["effect_fake_test.ts"],
    testonly = True,
    deps = [
        ":effects",
        ":effect_fake",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "effect_fake_test",
    deps = [":effect_fake_test_lib"],
)

ts_project(
    name = "effect_tester",
    srcs = ["effect_tester.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = [
        ":effects",
        "//:node_modules/@types/jasmine",
    ],
)

ts_project(
    name = "effect_tester_test_lib",
    srcs = ["effect_tester_test.ts"],
    testonly = True,
    deps = [
        ":effects",
        ":effect_fake",
        ":effect_tester",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "effect_tester_test",
    deps = [":effect_tester_test_lib"],
)

ts_project(
    name = "mocks",
    srcs = ["mocks.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = ["//:node_modules/@types/jasmine"],
)

ts_project(
    name = "mocks_test_lib",
    srcs = ["mocks_test.ts"],
    testonly = True,
    deps = [
        ":mocks",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "mocks_test",
    deps = [":mocks_test_lib"],
)

ts_project(
    name = "temp_dir",
    srcs = ["temp_dir.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    deps = [
        ":effects",
        "//:node_modules/@types/node",
    ],
)

ts_project(
    name = "temp_dir_test_lib",
    srcs = ["temp_dir_test.ts"],
    testonly = True,
    deps = [
        ":temp_dir",
        ":effect_tester",
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
    ],
)

jasmine_node_test(
    name = "temp_dir_test",
    deps = [":temp_dir_test_lib"],
)

ts_project(
    name = "test_server",
    srcs = ["test_server.ts"],
    testonly = True,
)

ts_project(
    name = "test_server_test_lib",
    srcs = ["test_server_test.ts"],
    testonly = True,
    deps = [
        ":test_server",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "test_server_test",
    deps = [":test_server_test_lib"],
)

ts_project(
    name = "webdriver",
    srcs = ["webdriver.ts"],
    testonly = True,
    visibility = ["//visibility:public"],
    data = ["//:node_modules/webdriverio"],
    deps = [
        ":effects",
        ":test_server",
        "//:node_modules/@types/node",
        "//:node_modules/webdriverio",
    ],
)

ts_project(
    name = "webdriver_test_lib",
    srcs = ["webdriver_test.ts"],
    testonly = True,
    deps = [
        ":devserver",
        ":webdriver",
        "effect_tester",
        "//:node_modules/@types/jasmine",
        "//:node_modules/webdriverio",
    ],
)

web_resources(
    name = "webdriver_test_resources",
    entries = {
        "/webdriver_test_page.html": "webdriver_test_page.html",
    },
    testonly = True,
)

web_resources_devserver(
    name = "webdriver_test_server",
    resources = ":webdriver_test_resources",
    testonly = True,
)

jasmine_web_test_suite(
    name = "webdriver_test",
    browsers = ["//tools/browsers:chromium-local"],
    data = [":webdriver_test_server"],
    deps = [":webdriver_test_lib"],
)
