load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//tools/jasmine:defs.bzl", "jasmine_node_test")
load("//tools/typescript:defs.bzl", "ts_project")
load(":label_test.bzl", "label_test_suite")
load(":paths_test.bzl", "paths_test_suite")

ts_project(
    name = "binary",
    srcs = ["binary.ts"],
    visibility = ["//visibility:public"],
    deps = ["//:node_modules/@types/node"],
)

ts_project(
    name = "binary_test_lib",
    srcs = ["binary_test.ts"],
    testonly = True,
    deps = [
        ":binary",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "binary_test",
    deps = [":binary_test_lib"],
)

ts_project(
    name = "collections",
    srcs = ["collections.ts"],
    visibility = ["//visibility:public"],
)

ts_project(
    name = "collections_test_lib",
    srcs = ["collections_test.ts"],
    testonly = True,
    deps = [
        ":collections",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "collections_test",
    deps = [":collections_test_lib"],
)

ts_project(
    name = "formatters",
    srcs = ["formatters.ts"],
    visibility = ["//visibility:public"],
)

ts_project(
    name = "formatters_test_lib",
    srcs = ["formatters_test.ts"],
    testonly = True,
    deps = [
        ":formatters",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "formatters_test",
    deps = [":formatters_test_lib"],
)

ts_project(
    name = "fs",
    srcs = ["fs.ts"],
    visibility = ["//visibility:public"],
    deps = ["//:node_modules/@types/node"],
)

ts_project(
    name = "http",
    srcs = ["http.ts"],
    visibility = ["//visibility:public"],
    deps = ["//:node_modules/@types/node"],
)

ts_project(
    name = "http_test_lib",
    srcs = ["http_test.ts"],
    testonly = True,
    deps = [
        ":http",
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
    ],
)

jasmine_node_test(
    name = "http_test",
    deps = [":http_test_lib"],
)

bzl_library(
    name = "label",
    srcs = ["label.bzl"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "label_test_lib",
    srcs = ["label_test.bzl"],
    deps = [":label"],
)

label_test_suite(name = "label_test")

bzl_library(
    name = "paths",
    srcs = ["paths.bzl"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "paths_test_lib",
    srcs = ["paths_test.bzl"],
    deps = [":paths"],
)

paths_test_suite(name = "paths_test")

ts_project(
    name = "prerender_annotation_walker",
    srcs = ["prerender_annotation_walker.ts"],
    visibility = ["//visibility:public"],
    deps = [
        "//common/models:prerender_annotation",
        "//:node_modules/node-html-parser",
    ],
)

ts_project(
    name = "prerender_annotation_walker_test_lib",
    srcs = ["prerender_annotation_walker_test.ts"],
    testonly = True,
    data = ["//:node_modules/node-html-parser"],
    deps = [
        ":prerender_annotation_walker",
        "//common/models:prerender_annotation",
        "//:node_modules/@types/jasmine",
        "//:node_modules/node-html-parser",
    ],
)

jasmine_node_test(
    name = "prerender_annotation_walker_test",
    deps = [":prerender_annotation_walker_test_lib"],
)

ts_project(
    name = "probably",
    srcs = ["probably.ts"],
    visibility = ["//visibility:public"],
)

ts_project(
    name = "probably_test_lib",
    srcs = ["probably_test.ts"],
    testonly = True,
    deps = [
        ":probably",
        "//:node_modules/@types/jasmine",
    ],
)

jasmine_node_test(
    name = "probably_test",
    deps = [":probably_test_lib"],
)
