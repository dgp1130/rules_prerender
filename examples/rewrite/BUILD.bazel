load("@aspect_rules_js//npm:defs.bzl", "npm_link_package")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load(
    "@rules_prerender//:index.bzl",
    "link_prerender_component",
    "prerender_pages2",
    "web_resources_devserver",
)

# Needed so Gazelle doesn't try to clobber the existing `prerender_component2()` targets.
# gazelle:js_project_naming_convention prerender

# Should resolve to `:my_component_prerender` or `:my_component_scripts`.
# gazelle:js_resolve **/*.prerender.{js,mjs} :{dirname}_prerender
# gazelle:js_resolve **/*.client.mjs :{dirname}_scripts

# Seems to require manual resolution sometimes.
# gazelle:js_resolve rules_prerender //:node_modules/rules_prerender
# gazelle:js_resolve @rules_prerender/declarative_shadow_dom/* //:prerender_components/@rules_prerender/declarative_shadow_dom
# gazelle:js_resolve @rules_prerender/preact //:node_modules/@rules_prerender/preact


npm_link_all_packages(name = "node_modules")

npm_link_package(
    name = "node_modules/rules_prerender",
    src = "@rules_prerender//:rules_prerender_pkg",
    visibility = ["//visibility:public"],
)
npm_link_package(
    name = "node_modules/@rules_prerender/declarative_shadow_dom",
    src = "@rules_prerender//packages/declarative_shadow_dom:pkg",
    visibility = ["//visibility:public"],
)
link_prerender_component(
    name = "prerender_components/@rules_prerender/declarative_shadow_dom",
    package = ":node_modules/@rules_prerender/declarative_shadow_dom",
    visibility = ["//visibility:public"],
)
npm_link_package(
    name = "node_modules/@rules_prerender/preact",
    src = "@rules_prerender//packages/preact:pkg",
    visibility = ["//visibility:public"],
    deps = {
        "//:.aspect_rules_js/node_modules/rules_prerender": "rules_prerender",
    },
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//:__subpackages__"],
)

ts_config(
    name = "tsconfig_client",
    src = "tsconfig.client.json",
    deps = [":tsconfig"],
    visibility = ["//:__subpackages__"],
)

prerender_pages2(
    name = "site",
    # TODO: Package-relative path instead of workspace-relative path.
    entry_point = "./site.prerender.js",
    prerender = ":prerender",
)

web_resources_devserver(
    name = "devserver",
    resources = ":site",
)

ts_project(
    name = "prerender",
    srcs = ["site.prerender.tsx"],
    tsconfig = "//:tsconfig",
    declaration = True,
    source_map = True,
    deps = [
        "//component:component_prerender",
        "//:node_modules/@rules_prerender/preact",
        "//:node_modules/preact",
    ],
)
