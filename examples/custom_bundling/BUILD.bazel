load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")
load("//tools:typescript.bzl", "ts_project")
load(
    "//:index.bzl",
    "extract_single_resource",
    "inject_resources",
    "prerender_pages_unbundled",
    "web_resources",
    "web_resources_devserver",
)
load("//tools:jasmine.bzl", "jasmine_web_test_suite")

# Prerender a single HTML file.
prerender_pages_unbundled(
    name = "page",
    src = "page.ts",
    tsconfig = "//:tsconfig.json",
    source_map = True,
    lib_deps = [
        "//packages/rules_prerender",
        "//:node_modules/rules_prerender",
    ],
    scripts = [":script"],
    deps = ["//examples/custom_bundling/component"],
)

# Extract the prerendered file to `page.html`.
extract_single_resource(
    resources = ":page",
    out = "page.html",
)

ts_project(
    name = "script",
    srcs = ["script.ts"],
    tsconfig = "//:tsconfig_client",
)

# Manually bundle all scripts.
rollup_bundle(
    name = "bundle",
    entry_point = ":page_scripts.js",
    config_file = "rollup.config.js",
    link_workspace_root = True,
    silent = True,
    deps = [
        ":page_scripts",
        "@npm//@rollup/plugin-node-resolve",
    ],
)

# Inject a `<script />` tag for the bundled JavaScript into the prerendered HTML
# file.
inject_resources(
    name = "injected_page",
    input = "page.html",
    scripts = ["/index.js"],
)

# Merge HTML and JavaScript into a single directory with files at the correct
# paths.
web_resources(
    name = "site",
    entries = {
        "/index.html": "injected_page.html",
        "/index.js": "bundle.js",
    },
    deps = [":page_resources"],
)

web_resources_devserver(
    name = "devserver",
    resources = ":site",
)

ts_project(
    name = "test_lib",
    srcs = ["test.ts"],
    testonly = True,
    deps = [
        "//common/testing:devserver",
        "//common/testing:webdriver",
        "@npm//@bazel/runfiles",
        "@npm//@types/jasmine",
    ],
)

jasmine_web_test_suite(
    name = "test",
    browsers = ["//tools/browsers:chromium-local"],
    data = [":devserver"],
    deps = [":test_lib"],
)
